"use strict";angular.module("configurationApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngRaven","ngResource","ngRoute","ngSanitize","ngTouch","angulartics","angulartics.google.analytics","angularSpinner","hc.marked","mm.foundation","selectize","xml"]).config(["$httpProvider","markedProvider","$ravenProvider","$routeProvider",function(a,b,c,d){a.interceptors.push("xmlHttpInterceptor"),b.setRenderer({link:function(a,b,c){return"<a href='"+a+"'"+(b?" title='"+b+"'":"")+" target='_blank'>"+c+"</a>"}}),d.when("/",{templateUrl:"views/home.html",controller:"HomeController"}).when("/configuration/server",{templateUrl:"views/configuration/server.html",controller:"ServerController"}).when("/configuration/accounts",{templateUrl:"views/configuration/accounts.html",controller:"AccountsController",reloadOnSearch:!1}).when("/configuration/rules",{templateUrl:"views/configuration/rules.html",controller:"RulesController"}).when("/connect",{templateUrl:"views/connect.html",controller:"ConnectController"}).when("/login",{templateUrl:"views/login.html",controller:"LoginController"}).when("/logout",{templateUrl:"views/logout.html",controller:"LogoutController"}).otherwise({redirectTo:"/"})}]).run(["Authentication","RavenTags","$location","$rootScope",function(a,b,c,d){var e=window.tfpc.metadata;d.$m=e,b.update({application_version:e.version,application_revision:e.revision.label}),plex.cloud.http.headers.setProduct("trakt (for Plex) - Configuration","1.0.0"),plex.cloud.http.xmlParser="x2js",("undefined"==typeof localStorage["plex.client.identifier"]||null===localStorage["plex.client.identifier"])&&(localStorage["plex.client.identifier"]=plex.utils.random.string()),plex.cloud.client_identifier=localStorage["plex.client.identifier"],d.$r={path:null,search:null,redirect:function(){var a,b;a="undefined"!=typeof this.path&&null!==this.path?this.path:"/",b="undefined"!=typeof this.search&&null!==this.search?this.search:"",this.path===c.path()&&(a="/",b=""),console.log("redirecting to %s (%s)",a,b),c.path(a),c.search(b)}},d.$on("$routeChangeStart",function(b,e){var f=e.controller;"LoginController"!==f&&(a.authenticated()||(e.resolve=angular.extend(e.resolve||{},{__authenticate__:function(){return a.get().then(function(){console.log("authenticated")},function(){d.$r.path=c.path(),d.$r.search=c.search(),c.path("/login"),c.search("")})}})),"ConnectController"!==f&&"LogoutController"!==f&&(null===d.$s||"undefined"==typeof d.$s)&&(d.$r.path=c.path(),d.$r.search=c.search(),c.path("/connect"),c.search("")))})}]),angular.module("configurationApp").controller("AccountsController",["Account","Utils","$location","$modal","$q","$rootScope","$routeParams","$scope",function(a,b,c,d,e,f,g,h){function i(a){return a=parseInt(a),null===a||isNaN(a)?(h.account=null,e.reject()):b.isDefined(h.accounts[a])?(h.account=h.accounts[a],h.accountRefresh()):Object.keys(h.accounts).length>0?j():e.reject()}function j(){return c.search("id",Object.keys(h.accounts)[0]),e.resolve()}function k(){return"undefined"!=typeof g.id?i(g.id):j()}h.accounts={},h.account=null,h.accountRefresh=function(){return"undefined"==typeof h.account||null===h.account?e.reject():h.account.refresh(f.$s)},h.accountDiscard=function(){return h.account.discard()},h.accountSave=function(){return h.account.save(f.$s)},h.accountDelete=function(){var a=d.open({templateUrl:"modals/deleteAccount.html",windowClass:"small",scope:h});return a.result.then(function(){return h.account["delete"](f.$s).then(function(){return h.refresh()})})},h.create=function(a){return null===a||""===a?e.reject("Name is required"):f.$s.call("account.create",[],{name:a}).then(function(){return h.refresh()},function(a){return null===a||"string"!=typeof a.message?e.reject("Unknown error"):e.reject(a.message)})},h.refresh=function(){return f.$s.call("account.list",[],{full:!0}).then(function(b){return h.accounts=_.indexBy(_.map(_.filter(b,function(a){return a.id>0&&!a.deleted}),function(b){return new a(b)}),function(a){return a.id}),k()},function(){return e.reject()})},h.refresh(),h.$on("account.plex.deleted",function(){h.refresh()}),h.$on("account.trakt.deleted",function(){h.refresh()}),h.$on("$routeUpdate",function(){k()})}]),angular.module("configurationApp").controller("ServerController",["Options","$q","$rootScope","$scope",function(a,b,c,d){d.options=null,d.refresh=function(){return c.$s.call("option.list",[]).then(function(b){d.options=new a(b)},function(){return b.reject()})},d.discard=function(){return d.options.discard()},d.save=function(){return d.options.save(c.$s)},d.refresh()}]),angular.module("configurationApp").controller("RulesController",["ClientRuleCollection","UserRuleCollection","$q","$rootScope","$scope",function(a,b,c,d,e){e.client=new a,e.user=new b,$(".rules table").sortable({handle:"a.move",containerSelector:"table",itemPath:"> tbody",itemSelector:"tr",placeholder:'<tr class="placeholder"/>',onDragStart:function(a,b,c){var d=a[0],e=d.parentNode,f=Array.prototype.indexOf.call(e.children,a[0]);a.addClass(b.group.options.draggedClass),$("body").addClass(b.group.options.bodyClass),a.data("drag-from",f)},onDrop:function(a,b,c){var d=a[0],f=d.parentNode,g=a.data("drag-from"),h=Array.prototype.indexOf.call(f.children,a[0]);a.removeClass(b.group.options.draggedClass).removeAttr("style"),$("body").removeClass(b.group.options.bodyClass);var i=a.parents("table"),j=i.data("collection"),k=null;if("client"===j)k=e.client;else{if("user"!==j)return void console.warn('Unable to find collection with the name "%s"',j);k=e.user}var l=k.rules[g];return"undefined"==typeof l?void console.warn("Unable to retrieve item with index %s",g):(k.rules.splice(g,1),k.rules.splice(h,0,l),k.updatePriorities(),void e.$apply())}}),e.refresh=function(){var a=[d.$s.call("account.list").then(function(a){a=_.filter(a,function(a){return a.id>0&&!a.deleted}),a=_.map(a,function(a){return{$order:10,type:"name",value:a.id,text:a.name}}),e.client.updateAccounts(a),e.user.updateAccounts(a)},function(){return c.reject("Unable to retrieve accounts")}),e.client.refresh(),e.user.refresh()];return c.all(a)},e.attributeLabel=function(a){return null===a||"*"===a?"Any":"@"===a?"Map":a},e.refresh()}]),angular.module("configurationApp").controller("ConnectController",["PlexServer","RavenTags","$location","$rootScope","$scope",function(a,b,c,d,e){e.state="",e.selected=null,e.servers=[],plex.cloud["/api"].resources(!0).then(function(b){var c=b.data,d=c.MediaContainer.Device;"undefined"==typeof d.length&&(d=[d]);var f=_.filter(d,function(a){return"server"===a._provides});e.$apply(function(){e.servers=_.map(f,function(b){return a.fromElement(b)})})}),e.select=function(a){a.connect().then(function(){console.log("Connection successful"),a.authenticate().then(function(){console.log("Authentication successful"),d.$s=a,b.update({plugin_version:a.plugin_version}),e.$r.redirect()},function(){console.warn("Authentication failed"),e.state=""})},function(){console.warn("Unable to find valid connection"),e.state=""}),e.state="connecting",e.selected=a}}]),angular.module("configurationApp").controller("FooterController",["$scope",function(a){a.connectionVisible=!1,a.versionVisible=!1,a.toggleConnection=function(){a.connectionVisible=!a.connectionVisible},a.toggleVersion=function(){a.versionVisible=!a.versionVisible}}]),angular.module("configurationApp").controller("HomeController",["$location",function(a){a.path("/configuration/server"),a.search("")}]),angular.module("configurationApp").controller("LoginController",["Authentication","$location","$modal","$q","$scope",function(a,b,c,d,e){e.onAuthenticated=function(b,c){a.login(b,c)&&e.$r.redirect()},e.showAuthenticationDetails=function(){var a=c.open({templateUrl:"modals/authenticationDetails.html",windowClass:"small"});a.result.then(function(){console.log("Modal closed")},function(){console.log("Modal dismissed")})}}]),angular.module("configurationApp").controller("LogoutController",["Authentication","$location",function(a,b){a.logout(),b.path("/login"),b.search("")}]),angular.module("configurationApp").factory("Differ",function(){function a(b,c){var d={};return _.each(b,function(b,e){c[e]!==b&&(_.isObject(b)&&(b=a(b,c[e]),0===Object.keys(b).length)||(d[e]=b))}),d}return{run:a}}),angular.module("configurationApp").factory("Utils",function(){return{isDefined:function(a){return!("undefined"==typeof a||null===a)}}}),angular.module("configurationApp").directive("coAuthenticationPlex",["Utils","$modal","$rootScope",function(a,b,c){return{restrict:"E",scope:{account:"=coAccount",plex:"=coPlex"},templateUrl:"directives/authentication/plex.html",controller:["$scope","$timeout",function(d,e){d._state=null,d.isAuthenticated=function(){return!(!a.isDefined(d.plex.title)||0===d.plex.title.length)},d.state=function(b){return a.isDefined(b)?void(d._state=b):a.isDefined(d.plex)?d.isAuthenticated()?a.isDefined(d._state)?d._state:"view":"edit":"view"},d.disconnect=function(){var a=d.$new(!0);a.account=d.account,a.username=d.plex.title;var e=b.open({templateUrl:"modals/disconnectAccount.html",windowClass:"small",scope:a});return e.result.then(function(){return d.plex["delete"](c.$s).then(function(){c.$broadcast("account.plex.deleted")})})},d["switch"]=function(a){d.state(a)},d.onAuthenticated=function(a,b){d.plex.updateAuthorization(a,b),d.state("view")},d.onCancelled=function(){d.state("view")},d.$watch(function(a){return a.plex},function(){d._state=null,d.$broadcast("reset"),e(function(){d.$broadcast("activate")})})}]}}]),angular.module("configurationApp").directive("coAuthenticationTabs",["Utils",function(a){return{restrict:"E",scope:{account:"=coAccount"},templateUrl:"directives/authentication/tabs.html",controller:["$scope",function(a){a.selected="trakt",a.select=function(b){a.selected=b}}]}}]),angular.module("configurationApp").directive("coAuthenticationTrakt",["Utils","$modal","$rootScope",function(a,b,c){return{restrict:"E",scope:{account:"=coAccount",trakt:"=coTrakt"},templateUrl:"directives/authentication/trakt.html",controller:["$scope",function(d){d._state=null,d.isAuthenticated=function(){return!(!a.isDefined(d.trakt.username)||0===d.trakt.username.length)},d.state=function(b){return a.isDefined(b)?void(d._state=b):a.isDefined(d.trakt)?d.isAuthenticated()?a.isDefined(d._state)?d._state:"view":"edit":"view"},d.disconnect=function(){var a=d.$new(!0);a.account=d.account,a.username=d.trakt.username;var e=b.open({templateUrl:"modals/disconnectAccount.html",windowClass:"small",scope:a});return e.result.then(function(){return d.trakt["delete"](c.$s).then(function(){c.$broadcast("account.trakt.deleted")})})},d["switch"]=function(a){d.state(a)},d.onBasicAuthenticated=function(){d.messages=[],d.trakt.basic.updateAuthorization(),d.trakt.updateDetails(),d.state("view")},d.onPinAuthenticated=function(a,b){d.trakt.pin.updateAuthorization(a),d.trakt.updateDetails(b),d.state("view")},d.onCancelled=function(){d.state("view")},d.$watch(function(a){return a.trakt},function(){d._state=null,d.$broadcast("reset")})}]}}]),angular.module("configurationApp").directive("coConfigurationGroup",function(){return{restrict:"E",scope:{groups:"=coGroups"},templateUrl:"directives/configuration/group.html"}}),angular.module("configurationApp").directive("coConfigurationHeader",function(){return{restrict:"E",scope:{title:"=coTitle",self:"=coSelf",refresh:"=coRefresh",discard:"=coDiscard",save:"=coSave","delete":"=coDelete"},templateUrl:"directives/configuration/header.html"}}),angular.module("configurationApp").directive("coConfigurationOption",function(){var a=20;return{restrict:"E",scope:{option:"="},template:'<ng-include src="getTemplateUrl()"/>',controller:["$scope","$element",function(a,b){var c="directives/configuration/option/",d={"boolean":"boolean.html","enum":"enum.html",integer:"integer.html",string:"string.html"};a.descriptionOpened=!1,a.getTemplateUrl=function(){return c+d[a.option.type]},a.parseKey=function(a){if("null"===a)return null;var b=parseInt(a,10);return isNaN(b)||b.toString()!==a?a:b},a.closeDescription=function(){a.descriptionOpened=!1},a.openDescription=function(){$(b).css("top",""),a.descriptionOpened=!0}}],link:function(b,c,d){var e=null;$(c).hover(function(){null==e&&(e=$(".description",c));var b=$(document).height();if(e.addClass("visible"),"flex"!=e.css("display"))return void e.removeClass("visible");var d=e.offset(),f=d.top+e.height()+a,g=f-b;g>0&&e.css("top",-g+"px")},function(){null==e&&(e=$(".description",c)),e.css("top",""),e.removeClass("visible")})}}}),angular.module("configurationApp").directive("coPlexHome",function(){function a(a){return a>=48&&57>=a?String.fromCharCode(a):a>=96&&105>=a?String.fromCharCode(a-48):null}function b(a){this.$scope=a;var b=this;a.$on("reset",function(){b.reset()}),a.pinKeyDown=function(a){b.pinKeyDown(a)},a.select=function(a){b.select(a)},a["switch"]=function(b){a.state=b}}return b.prototype.reset=function(){var a=this.$scope;a.current=null,a.state="list",a.users=[]},b.prototype.refresh=function(){var a=this.$scope;plex.cloud["/api/home"].users().then(function(b){var c=b.data,d=c.MediaContainer.User;"undefined"==typeof d.length&&(d=[d]),a.$apply(function(){a.users=d}),console.log(a.users)},function(){a.$apply(function(){a.users=[]})})},b.prototype.select=function(a){"1"===a._protected?this.pinLogin(a):this.basicLogin(a)},b.prototype.basicLogin=function(a,b){var c=this.$scope;c.onAuthenticated(a._id,b)},b.prototype.pinLogin=function(a){var b=this.$scope;b.current=a,b.state="pin"},b.prototype.pinKeyDown=function(b){var c=this.$scope,d=$(b.target),e=d.parent("span"),f=e.parent("div");if(b.preventDefault(),8===b.keyCode){if(""!==d.val())return void d.val("");var g=e.prev();if(0===g.length)return;$("input",g).val("").focus()}else{var h=a(b.keyCode);if(null===h)return;d.val(h);var i=e.next();if(0===i.length){for(var j=$("input",f),k="",l=0;l<j.length;++l){var m=$(j[l]).val();if(""===m)return;k+=m}return void c.onAuthenticated(c.current._id,k)}$("input",i).focus()}},{restrict:"E",scope:{onAuthenticated:"=coAuthenticated"},templateUrl:"directives/plex/home.html",controller:["$scope",function(a){a.current=null,a.state="list",a.users=[];var c=new b(a);c.refresh()}],link:function(a,b,c){}}}),angular.module("configurationApp").directive("coPlexLogin",["Utils","$q",function(a,b){function c(a){this.$scope=a;var b=this;a.$on("reset",function(){b.reset()}),a.basicLogin=function(){return b.basicLogin(a.credentials)},a.onHomeAuthenticated=function(a,c){b.onHomeAuthenticated(a,c)},a.onPinAuthenticated=function(a){b.onPinAuthenticated(a)},a.onPinExpired=function(){b.onPinExpired()},a["switch"]=function(b){a.messages=[],a.method=b}}return c.prototype.reset=function(){var a=this.$scope;a.credentials={username:null,password:null},a.messages=[],a.method="pin"},c.prototype.appendMessage=function(a,b){var c=this.$scope;c.messages.push({type:a,content:b})},c.prototype.basicLogin=function(c){var d=this.$scope,e=this;return d.messages=[],a.isDefined(c)&&a.isDefined(c.username)&&a.isDefined(c.password)?plex.cloud["/users"].login(c.username,c.password).then(function(a){d.$apply(function(){e.handleSuccess(a.data.user)})},function(a){return d.$apply(function(){e.handleError(a.data,a.statusCode)}),b.reject()}):(e.appendMessage("error","Invalid basic login request"),b.reject())},c.prototype.onHomeAuthenticated=function(b,c){var d=this.$scope,e=this;return d.messages=[],a.isDefined(b)?a.isDefined(c)&&isNaN(c)?void e.appendMessage("error","PIN contains invalid characters, only numbers are allowed"):void plex.cloud["/api/home/users"]["switch"](b,c).then(function(a){d.$apply(function(){e.handleSuccess(a.data.user)})},function(a){d.$apply(function(){e.handleError(a.data,a.statusCode)})}):void e.appendMessage("error","Invalid user switch request")},c.prototype.onPinAuthenticated=function(b){var c=this.$scope,d=this;return c.messages=[],a.isDefined(b)&&a.isDefined(b.token)?void plex.cloud["/users"].account(b.token,{plex:{useToken:!1}}).then(function(a){c.$apply(function(){d.handleSuccess(a.data.user)})},function(a){c.$apply(function(){d.handleError(a.data,a.statusCode)})}):void d.appendMessage("error","Invalid pin login request")},c.prototype.onPinExpired=function(){this.$scope;this.appendMessage("error","Pin has expired")},c.prototype.handleSuccess=function(a){var b=this.$scope;b.onAuthenticated(a._authenticationToken,a)},c.prototype.handleError=function(b,c){this.$scope;if(a.isDefined(b)&&a.isDefined(b.errors)&&a.isDefined(b.errors.error))for(var d="object"==typeof b.errors.error?b.errors.error:[b.errors.error],e=0;e<d.length;++e)this.appendMessage("error",d[e]);else a.isDefined(b.Response)&&a.isDefined(b.Response._status)?this.appendMessage("error",b.Response._status):this.appendMessage("error","HTTP Error: "+c)},{restrict:"E",scope:{onAuthenticated:"=coAuthenticated",isCancelEnabled:"=coCancelEnabled",onCancelled:"=coCancelled",buttonSize:"@coButtonSize",modes:"=coModes"},templateUrl:"directives/plex/login.html",compile:function(a,b){"undefined"==typeof b.coButtonSize&&(b.coButtonSize="small")},controller:["$scope",function(a){a.credentials={username:null,password:null},a.messages=[],a.method="pin";new c(a)}]}}]),angular.module("configurationApp").directive("coPlexPin",["$timeout",function(a){function b(a){this.$scope=a,this.checks=0,this.interval=c,this.timer=null;var b=this;a.$on("activate",function(){b.create()}),a.$on("reset",function(){b.reset()})}var c=2e3,d=1e4;return b.prototype.reset=function(){var b=this.$scope;null!==this.timer&&(a.cancel(this.timer),this.timer=null),this.checks=0,this.interval=c,b.current=null,b.enabled=!0,b.expires_at=null,b.state=null},b.prototype.check=function(){console.debug("Checking pin status...");var a=this.$scope,b=this;return a.enabled!==!0?(console.debug("PIN authentication has been cancelled"),void b.reset()):"undefined"==typeof a.current||null===a.current||null===a.current.id?(console.warn("Invalid pin data",a.current),void b.reset()):new Date>a.expires_at?(console.debug("Pin has expired"),void b.reset()):(this.checks+=1,void plex.cloud["/pins"].get(a.current.id).then(function(c){var d=c.data;return"true"===d.pin.auth_token._nil?void b.schedule():void a.$apply(function(){a.enabled===!0&&a.onAuthenticated({token:d.pin.auth_token}),a.state="complete"})},function(b,c){a.$apply(function(){a.state="complete"}),a.onExpired()}))},b.prototype.create=function(){var a=this.$scope,b=this;return a.state="create",a.enabled!==!0?void console.debug("PIN authentication has been cancelled"):(console.debug("Creating new PIN..."),void plex.cloud.pins().then(function(c){var d=c.data;a.$apply(function(){a.current=d.pin,a.expires_at=new Date(d.pin.expires_at),a.state="check"}),b.schedule(8e3)},function(){a.$apply(function(){a.state="error",b.reset()})}))},b.prototype.schedule=function(b){var e=this;null!==e.timer&&(a.cancel(e.timer),e.timer=null),this.interval=Math.round(c+this.checks/3*1e3),this.interval>d&&(this.interval=d),"undefined"==typeof b&&(b=this.interval),e.timer=a(function(){e.check()},b),console.debug("Checking pin status in %sms",b)},{restrict:"E",scope:{onAuthenticated:"=coAuthenticated",onExpired:"=coExpired"},templateUrl:"directives/plex/pin.html",controller:["$scope",function(a){a.current=null,a.enabled=!0,a.expires_at=null,a.state=null;var c=new b(a);c.create()}],link:function(a,b,c){b.on("$destroy",function(){a.enabled=!1})}}}]),angular.module("configurationApp").directive("coTraktLogin",["Utils","$http","$q",function(a,b,c){function d(a){this.$scope=a;var b=this;a.$on("reset",function(){b.reset()}),a.basicLogin=function(){return b.basicLogin()},a.pinLogin=function(){return b.pinLogin()},a["switch"]=function(b){a.messages=[],a.method=b}}var e=new trakt.Client("c9ccd3684988a7862a8542ae0000535e0fbd2d1c0ca35583af7ea4e784650a61","bf00575b1ad252b514f14b2c6171fe650d474091daad5eb6fa890ef24d581f65");return d.prototype.appendMessage=function(a,b){var c=this.$scope;c.messages.push({type:a,content:b})},d.prototype.reset=function(){var a=this.$scope;a.messages=[],a.method="pin"},d.prototype.basicLogin=function(){var a=this.$scope;return a.messages=[],a.basicAuthenticated({credentials:a.basic}),c.resolve()},d.prototype.pinLogin=function(){var a=this.$scope,b=this;return a.messages=[],e.oauth.token(a.pin.code).then(function(d){return e["users/settings"].get(d.access_token).then(function(b){a.$apply(function(){a.pinAuthenticated({authorization:d,credentials:a.pin,settings:b})})},function(d,e){return a.$apply(function(){b.handleError(d,e,"Unable to retrieve account details")}),c.reject(d,e)})},function(d,e){return a.$apply(function(){b.handleError(d,e,"Unable to retrieve token")}),c.reject(d,e)})},d.prototype.handleError=function(a,b,c){var d=this.getError(a,b,c);this.appendMessage("error",d)},d.prototype.getError=function(b,c,d){if(a.isDefined(b)){if(a.isDefined(b.error)&&"invalid_grant"===b.error)return"Invalid authentication pin provided";if(a.isDefined(b.error_description))return b.error_description;if(a.isDefined(b.error))return b.error}return a.isDefined(c)?"HTTP Error: "+c:d},{restrict:"E",scope:{buttonSize:"@coButtonSize",isCancelEnabled:"=coCancelEnabled",cancelled:"=coCancelled",basic:"=coBasic",basicAuthenticated:"&coBasicAuthenticated",pin:"=coPin",pinAuthenticated:"&coPinAuthenticated"},templateUrl:"directives/trakt/login.html",controller:["$scope",function(a){"undefined"==typeof a.buttonSize&&(a.buttonSize="small"),"undefined"==typeof a.basic&&(a.basic={username:null,password:null}),"undefined"==typeof a.pin&&(a.pin={code:null}),a.messages=[],a.method="pin";new d(a)}]}}]),angular.module("configurationApp").directive("coButton",["Utils",function(a){return{restrict:"E",scope:{self:"=coSelf",callback:"=coCallback","class":"@coClass",size:"@coSize",tooltip:"@coTooltip"},templateUrl:"directives/button.html",transclude:!0,compile:function(b,c){return a.isDefined(c.coSize)||(c.coSize="tiny"),this.link},controller:["$scope",function(a){a.call=function(){return"undefined"==typeof a.self||null===a.self?a.callback():$.proxy(a.callback,a.self)()},a.click=function(){a.button.start(),a.call().then(function(){a.button.stop()},function(){a.button.stop()})}}],link:function(a,b){var c=$("button",b);c.addClass(a["class"]).addClass(a.size).addClass("ladda-button").css("display",""),"secondary"===a["class"]&&c.attr("data-spinner-color","#333333"),a.button=Ladda.create(c[0])}}}]),angular.module("configurationApp").directive("coButtonInput",["$timeout",function(a){return{restrict:"E",scope:{callback:"=coCallback",placeholder:"@coPlaceholder",tooltip:"@coTooltip"},templateUrl:"directives/button-input.html",transclude:!0,controller:["$scope",function(b){b.opened=!1,b.value=null,b.click=function(){return b.opened?(b.button.start(),void b.callback(b.value).then(function(){b.close(),b.button.stop()},function(a){b.error=a,b.button.stop()})):void b.open()},b.open=function(){b.opened=!0,a(function(){b.input.focus()},100)},b.close=function(){b.error=null,b.opened=!1,b.value=null},b.keyup=function(a){13===a.keyCode?b.click():27===a.keyCode&&b.close()}}],link:function(a,b){a.button=Ladda.create($("button",b)[0]),a.input=$("input",b)}}}]),angular.module("configurationApp").filter("orderObjectBy",function(){return function(a,b,c){var d=[];return angular.forEach(a,function(a){d.push(a)}),d.sort(function(a,c){return a[b]>c[b]?1:-1}),c&&d.reverse(),d}}),angular.module("configurationApp").factory("TraktAuthentication",["TraktBasicAuthentication","TraktPinAuthentication","BaseAuthentication","Utils",function(a,b,c,d){function e(){this.original=null,this.id=null,this.username=null,this.thumb_url=null,this.basic=new a(this),this.pin=new b(this),this.messages=[],this.state=""}return e.prototype.appendMessage=function(a,b){this.messages.push({type:a,content:b})},e.prototype.check=function(){var a=_.map(this.messages,function(a){return a.type});a.push(c.selectPriorityState([this.basic.state,this.pin.state])),this.state=c.selectPriorityState(a,"bottom")},e.prototype.clear=function(a){this.messages=[],this.check()},e.prototype.current=function(){var a={trakt:{}};return this.basic.changed&&$.extend(!0,a.trakt,this.basic.current()),this.pin.changed&&$.extend(!0,a.trakt,this.pin.current()),a},e.prototype["delete"]=function(a){var b=this;return a.call("account.trakt.delete",[],{id:b.id}).then(function(a){return a?void 0:$q.reject()})},e.prototype.update=function(a){this.original=angular.copy(a),this.id=a.id,this.username=a.username,this.thumb_url=a.thumb_url,this.basic.update(a.authorization.basic),this.pin.update(a.authorization.oauth),this.messages=[],this.state=""},e.prototype.updateDetails=function(a){if(!d.isDefined(a)||!d.isDefined(a.user))return this.username="Unknown",void(this.thumb_url=null);var b=a.user.images.avatar,c=a.user;this.username=c.username,this.thumb_url=b.full},e.prototype.onSaveError=function(a){d.isDefined(a)&&d.isDefined(a.message)&&this.appendMessage("error",a.message)},e}]),angular.module("configurationApp").factory("TraktBasicAuthentication",["BaseAuthentication","Utils","$q",function(a,b,c){function d(a){this.main=a,this.changed=!1,this.original=null,this.username=null,this.password=null,this.messages=[],this.state=""}return d.prototype.appendMessage=function(a,b){this.messages.push({type:a,content:b})},d.prototype.current=function(){return{username:this.username,authorization:{basic:{password:this.password}}}},d.prototype.update=function(a){this.changed=!1,this.original=angular.copy(a),this.username=a.username,this.password=a.password,this.messages=[],this.state=a.state},d.prototype.updateAuthorization=function(){this.messages=[],this.changed=!0,this.appendMessage("info","Account details are unavailable until changes have been saved")},d}]),angular.module("configurationApp").factory("TraktPinAuthentication",["BaseAuthentication","Utils","$q",function(a,b,c){function d(a){this.main=a,this.changed=!1,this.original=null,this.authorization=null,this.code=null,this.messages=[],this.state=""}return d.prototype.current=function(){var a=this.authorization;return b.isDefined(a)?{authorization:{oauth:$.extend({code:this.code},a)}}:{}},d.prototype.update=function(a){this.changed=!1,this.original=angular.copy(a),this.authorization=null,this.code=a.code,this.messages=[],this.state=a.state},d.prototype.updateAuthorization=function(a){this.authorization=a,this.changed=!0},d}]),angular.module("configurationApp").factory("BaseAuthentication",function(){var a={valid:0,empty:1,warning:2,error:3},b={0:"valid",1:"empty",2:"warning",3:"error"};return{selectPriorityState:function(c,d){if(d="undefined"!=typeof d?d:"top",0===c.length)return null;if(c=_.uniq(c),1===c.length)return c[0];var e=_.map(c,function(b){return a[b]});e=_.sortBy(e,function(a){return a});var f;if("top"===d)f=e[0];else{if("bottom"!==d)return console.warn('Unknown "type" provided for selectPriorityState()'),null;f=e[e.length-1]}return b[f]}}}),angular.module("configurationApp").factory("AccountAuthentication",["BaseAuthentication","PlexAuthentication","TraktAuthentication","Utils",function(a,b,c,d){function e(){this.plex=new b,this.trakt=new c,this.messages=[],this.state=""}return e.prototype.appendMessage=function(a,b){this.messages.push({type:a,content:b})},e.prototype.check=function(){this.plex.check(),this.trakt.check();var b=_.map(this.messages,function(a){return a.type});b.push(this.plex.state),b.push(this.trakt.state),this.state=a.selectPriorityState(b,"bottom")},e.prototype.clear=function(){this.messages=[],this.plex.clear(),this.trakt.clear(),this.check()},e.prototype.update=function(a){this.plex.update(a.plex),this.trakt.update(a.trakt),this.messages=[],this.state="",this.check()},e.prototype.onSaveError=function(a){d.isDefined(a)&&d.isDefined(a.message)&&this.appendMessage("error",a.message)},e}]),angular.module("configurationApp").factory("PlexAuthentication",["BaseAuthentication","Utils","$q",function(a,b,c){function d(){this.changed=!1,this.original=null,this.id=null,this.username=null,this.title=null,this.thumb_url=null,this.authorization=null,this.messages=[],this.state=""}return d.prototype.appendMessage=function(a,b){this.messages.push({type:a,content:b})},d.prototype.check=function(){b.isDefined(this.title)&&0!==this.title.length||"valid"!==this.authorization.basic.state||(this.appendMessage("warning","Account hasn't completed the authentication process"),this.authorization.basic.state="warning");var c=_.map(this.messages,function(a){return a.type});c.push(this.authorization.basic.state),this.state=a.selectPriorityState(c,"bottom")},d.prototype.clear=function(a){this.messages=[],this.check()},d.prototype.current=function(){return this.changed?{plex:{username:this.username,authorization:{basic:{token_plex:this.authorization.basic.token_plex}}}}:{}},d.prototype["delete"]=function(a){var b=this;return a.call("account.plex.delete",[],{id:b.id}).then(function(a){return a?void 0:c.reject()})},d.prototype.update=function(a){this.changed=!1,this.original=angular.copy(a),this.id=a.id,this.username=a.username,this.title=a.title,this.thumb_url=a.thumb_url,this.authorization=a.authorization,this.messages=[],this.state=""},d.prototype.updateAuthorization=function(a,b){this.username=b.username,this.title=b._title,this.thumb_url=b._thumb,this.authorization.basic.token_plex=a,this.changed=!0},d.prototype.onSaveError=function(a){b.isDefined(a)&&b.isDefined(a.message)&&this.appendMessage("error",a.message)},d}]),angular.module("configurationApp").factory("ClientRuleCollection",["ClientRule","$q","$rootScope","$timeout",function(a,b,c,d){function e(){this.available={keys:null,names:null,addresses:null},this.accounts=null,this.accountsById=null,this.original=null,this.rules=null}var f=[{$order:1,value:"-",text:"None"}],g=[{$order:1,value:"*",text:"Any"}];return e.prototype.create=function(){this.reset();var b=new a(this,{key:"*",name:"*",address:"*",account:{id:"-",name:"None"},priority:this.rules.length+1},"edit");this.rules.push(b),d(function(){b.focus()})},e.prototype["delete"]=function(a){var b=this.rules.indexOf(a);-1!==b&&(this.rules.splice(b,1),this.updatePriorities())},e.prototype.discard=function(){return this.updateRules(this.original),this.updatePriorities(),b.resolve()},e.prototype.refresh=function(){var a=this;return b.all([c.$s.call("session.client.list").then($.proxy(a.updateClients,a),function(){return b.reject("Unable to retrieve clients")}),c.$s.call("session.client.rule.list",[],{full:!0}).then($.proxy(a.updateRules,a),function(){return b.reject("Unable to retrieve client rules")})])},e.prototype.reset=function(){_.each(this.rules,function(a){a.save()})},e.prototype.save=function(){var a=this,d=_.map(this.rules,function(a){return a.current()});return c.$s.call("session.client.rule.update",[],{current:d,full:!0}).then($.proxy(a.updateRules,a),function(){return b.reject("Unable to update client rules")})},e.prototype.renderClient=function(a,b){return"key"!==a.type?'<div class="option">'+b(a.text)+"</div>":'<div class="option client"><div class="name">'+b(a.name)+'</div><small class="extra">'+b(a.product)+" / "+b(a.text)+"</small></div>"},e.prototype.updateAccounts=function(a){this.accounts=[].concat(f,a),this.accountsById=_.indexBy(this.accounts,"value")},e.prototype.updateClients=function(a){this.available.keys=[].concat(g,_.map(a,function(a){return{$order:10,type:"key",value:a.key,text:a.key,name:a.name,platform:a.platform,product:a.product}})),this.available.names=[].concat(g,_.map(a,function(a){return{$order:10,type:"name",value:a.name,text:a.name}})),this.available.addresses=[].concat(g,_.map(a,function(a){return{$order:10,type:"address",value:a.address,text:a.address}}))},e.prototype.updatePriorities=function(){for(var a=0;a<this.rules.length;++a)this.rules[a].priority=a+1},e.prototype.updateRules=function(b){var c=this;this.original=angular.copy(b),this.rules=_.map(b,function(b){return new a(c,b)})},e}]),angular.module("configurationApp").factory("ClientRule",function(){function a(a,b,c){this.collection=a,this.id=null,this.key=null,this.name=null,this.address=null,this.account=null,this.priority=null,this.state="undefined"!=typeof c?c:"view",
this.update(b)}function b(a){return"@"===a.account_function?{id:"@",name:"Map"}:"undefined"!=typeof a.account&&null!==a.account?a.account:{id:"-",name:"None"}}function c(a){return null===a?"*":a}return a.prototype["delete"]=function(){this.collection["delete"](this)},a.prototype.edit=function(){this.collection.reset(),this.state="edit"},a.prototype.focus=function(){if("undefined"!=typeof this.priority&&null!==this.priority){var a=$(".rules .clients .rule.p-"+this.priority);if(null===a||0===a.length)return void console.warn("Unable to find TR element for rule",this);console.log(a),$("td.account input",a).focus()}},a.prototype.save=function(){this.state="view";var a=this.collection.accountsById[this.account.id];"undefined"==typeof a?this.account.name="None":this.account.name=a.text},a.prototype.current=function(){var a={id:this.id,key:this.key,name:this.name,address:this.address,account:null,account_function:null,priority:this.priority};return"-"===this.account.id?a.account=null:"@"===this.account.id?a.account_function="@":a.account=this.account.id,a},a.prototype.update=function(a){this.original=angular.copy(a),this.id="undefined"!=typeof a.id?a.id:null,this.key=c(a.key),this.name=c(a.name),this.address=c(a.address),this.account=b(a),this.priority=a.priority},a}),angular.module("configurationApp").factory("UserRuleCollection",["UserRule","$q","$rootScope","$timeout",function(a,b,c,d){function e(){this.available={names:null},this.accounts=null,this.accountsById=null,this.original=null,this.rules=null}var f=[{$order:1,value:"-",text:"None"},{$order:2,value:"@",text:"Map"}],g=[{$order:1,value:"*",text:"Any"}];return e.prototype.create=function(){this.reset();var b=new a(this,{name:"*",account:{id:"-",name:"None"},priority:this.rules.length+1},"edit");this.rules.push(b),d(function(){b.focus()})},e.prototype["delete"]=function(a){var b=this.rules.indexOf(a);-1!==b&&(this.rules.splice(b,1),this.updatePriorities())},e.prototype.discard=function(){return this.updateRules(this.original),this.updatePriorities(),b.resolve()},e.prototype.refresh=function(){var a=this;return b.all([c.$s.call("session.user.list").then($.proxy(a.updateUsers,a),function(){return b.reject("Unable to retrieve users")}),c.$s.call("session.user.rule.list",[],{full:!0}).then($.proxy(a.updateRules,a),function(){return b.reject("Unable to retrieve user rules")})])},e.prototype.reset=function(){_.each(this.rules,function(a){a.save()})},e.prototype.save=function(){var a=this,d=_.map(this.rules,function(a){return a.current()});return c.$s.call("session.user.rule.update",[],{current:d,full:!0}).then($.proxy(a.updateRules,a),function(){return b.reject("Unable to update user rules")})},e.prototype.updateAccounts=function(a){this.accounts=[].concat(f,a),this.accountsById=_.indexBy(this.accounts,"value")},e.prototype.updatePriorities=function(){for(var a=0;a<this.rules.length;++a)this.rules[a].priority=a+1},e.prototype.updateRules=function(b){var c=this;this.original=angular.copy(b),this.rules=_.map(b,function(b){return new a(c,b)})},e.prototype.updateUsers=function(a){this.available.names=[].concat(g,_.map(a,function(a){return{$order:10,type:"name",value:a.name,text:a.name}}))},e}]),angular.module("configurationApp").factory("UserRule",function(){function a(a,b,c){this.collection=a,this.id=null,this.name=null,this.account=null,this.priority=null,this.state="undefined"!=typeof c?c:"view",this.update(b)}function b(a){return"@"===a.account_function?{id:"@",name:"Map"}:"undefined"!=typeof a.account&&null!==a.account?a.account:{id:"-",name:"None"}}function c(a){return null===a?"*":a}return a.prototype["delete"]=function(){this.collection["delete"](this)},a.prototype.edit=function(){this.collection.reset(),this.state="edit"},a.prototype.focus=function(){if("undefined"!=typeof this.priority&&null!==this.priority){var a=$(".rules .users .rule.p-"+this.priority);if(null===a||0===a.length)return void console.warn("Unable to find TR element for rule",this);console.log(a),$("td.account input",a).focus()}},a.prototype.save=function(){this.state="view";var a=this.collection.accountsById[this.account.id];"undefined"==typeof a?this.account.name="None":this.account.name=a.text},a.prototype.current=function(){var a={id:this.id,name:this.name,account:null,account_function:null,priority:this.priority};return"-"===this.account.id?a.account=null:"@"===this.account.id?a.account_function="@":a.account=this.account.id,a},a.prototype.update=function(a){this.original=angular.copy(a),this.id="undefined"!=typeof a.id?a.id:null,this.name=c(a.name),this.account=b(a),this.priority=a.priority},a}),angular.module("configurationApp").factory("PlexConnection",["$http",function(a){function b(){this.client=null,this.uri=null}return b.prototype.request=function(b,c){return c.url=this.uri+"/"+b,a(c)},b.fromElement=function(a){var c=new b;return c.uri=a._uri,c},b}]),angular.module("configurationApp").factory("PlexConnectionManager",["$http","$q",function(a,b){function c(a,b){this.server=a,this.available=b,this.client=null,this.current=null}return c.prototype.reset=function(){this.client=null,this.current=null,this.server.client=null},c.prototype.test=function(){function a(){var b=d.shift();return null==b?void e.reject(f):void c.testConnection(b).then(function(a){e.resolve(a)},function(b){"undefined"!=typeof b&&null!==b&&(f=b),a()})}var c=this,d=angular.copy(c.available),e=b.defer(),f="Unable to find valid connection";return console.debug("[%s] Testing %s connections",c.server.identifier,d.length),c.reset(),a(),e.promise},c.prototype.testConnection=function(a){var c=this,d=new plex.Server(a.uri);if(console.debug("[%s] Testing connection: %s",c.server.identifier,a.uri),d.client_identifier=localStorage["plex.client.identifier"],d.token=c.server.token_plex,d.http.headers.setProduct("trakt (for Plex) - Configuration","1.0.0"),d.http.xmlParser="x2js","https:"===window.location.protocol&&a.uri.startsWith("http:"))return b.reject("Only secure servers are supported when browsing over https://");var e=b.defer();return d.identity({timeout:1500}).then(function(b){var f=b.data,g=f.MediaContainer._machineIdentifier;return g!==c.server.identifier?(console.debug("Connection identifier %s doesn't match the server identifier %s",g,c.server.identifier),void e.reject()):(console.log("[%s] Using connection: %s",c.server.identifier,a.uri),a.client=d,c.client=d,c.current=a,c.server.client=d,void e.resolve(a))},function(){e.reject()}),e.promise},c}]),angular.module("configurationApp").factory("PlexServer",["PlexConnection","PlexConnectionManager","Utils","VersionUtil","$location","$q","$rootScope",function(a,b,c,d,e,f,g){function h(a){if(c.isDefined(a.reason))return a.reason;if(c.isDefined(a.data)&&c.isDefined(a.data.error)){var b=a.data.error;if(c.isDefined(b.message))return b.message}return c.isDefined(a.statusCode)?"HTTP Error: "+a.statusCode:"Unknown error"}function i(){this.name=null,this.identifier=null,this.plugin_version=null,this.token_channel=null,this.token_channel_expire=null,this.token_plex=null,this.client=null,this.connection_manager=null,this.status=null}var j="com.plexapp.plugins.trakttv",k="1.0.3.0",l="MessageKit:Api";return i.prototype.isAuthenticated=function(){return null!==this.token_channel},i.prototype.authenticate=function(){var a=this;return a.status=null,this.call("system.authenticate",[this.token_plex]).then(function(b){return null===b["X-Channel-Token"]||null===b["X-Channel-Token-Expire"]?(a.clearAuthentication(),a.status="Unable to authenticate with plugin",f.reject(null)):(a.token_channel=b["X-Channel-Token"],a.token_channel_expire=b["X-Channel-Token-Expire"],void a.save())},function(b){return a.clearAuthentication(),a.status=h(b),f.reject()})},i.prototype.clearAuthentication=function(){this.token_channel=null,this.token_channel_expire=null,this.save()},i.prototype.disconnect=function(){this.clearAuthentication(),g.$s=null,e.path("/connect"),e.search("")},i.prototype.connect=function(){var a=this;return a.status=null,this.connection_manager.test().then(function(b){return a.check().then(function(){return b},function(b){return a.status=h(b),f.reject(a.status)})},function(b){return a.status=b,f.reject(a.status)})},i.prototype.check=function(){var a=this;return this.call("system.ping").then(function(b){return a.plugin_version=b.version,d.compare(a.plugin_version,k)>=0?!0:f.reject({reason:"Plugin needs to be updated to v"+k+" or later"})},function(a){return f.reject(a)})},i.prototype.call=function(a,b,c){b="undefined"!=typeof b?b:[],b.splice(0,0,a);var d={};null!==this.token_channel&&(d["X-Channel-Token"]=this.token_channel),console.debug('[%s] Request "%s"',this.identifier,a,{args:b,kwargs:c});var e=f.defer(),g=this;return this.client["/:/plugins/*/messaging"].callFunction(j,l,b,c,{headers:d}).then(function(a){var b=a.data;return"string"==typeof b?b=JSON.parse(b):"object"==typeof b&&console.warn("Legacy response format returned"),console.debug("[%s] Response",g.identifier,b),void 0!==b.result?void e.resolve(b.result):void(void 0!==b.error?("error.authentication.required"==b.error.code&&g.disconnect(),e.reject(b.error)):e.reject(null))},function(a){e.reject(a)}),e.promise},i.prototype.get=function(a,b){return b="undefined"!=typeof b?b:{},b.method="GET",b.headers="undefined"!=typeof b.headers?b.headers:{},b.headers["X-Plex-Token"]=this.token_plex,this.current.request(a,b)},i.prototype._attributeKey=function(a){return"server."+this.identifier+"."+a},i.prototype.load=function(){function a(a){var c=localStorage[b._attributeKey(a)];null!==c&&"undefined"!=typeof c&&(b[a]=c)}if(null!==this.identifier&&"undefined"!=typeof this.identifier){var b=this;a("token_channel"),a("token_channel_expire")}},i.prototype.save=function(){function a(a){localStorage[b._attributeKey(a)]=b[a]}if(null!==this.identifier&&"undefined"!=typeof this.identifier){var b=this;a("token_channel"),a("token_channel_expire")}},i.fromElement=function(c){var d=new i;d.name=c._name,d.identifier=c._clientIdentifier,d.token_plex=c._accessToken,"undefined"==typeof c.Connection.length&&(c.Connection=[c.Connection]);var e=_.map(c.Connection,function(b){return a.fromElement(b)});return d.connection_manager=new b(d,e),d.load(),d},i}]),angular.module("configurationApp").factory("Account",["AccountAuthentication","Differ","Options","Utils","$q",function(a,b,c,d,e){function f(b){this.authentication=new a,this.original=null,this.options=null,this.id=null,this.name=null,this.thumb_url=null,this.update(b)}var g={plex:{authorization:{basic:{valid:!1}}},trakt:{authorization:{basic:{valid:!1},oauth:{valid:!1}}}};return f.prototype.current=function(){var a=this,b=[this.authentication.plex.current(),this.authentication.trakt.current()];return e.all(b).then(function(b){var c={name:a.name};return _.each(b,function(a){$.extend(!0,c,a)}),c},function(a){return e.reject(a)})},f.prototype.update=function(a){a=$.extend(!0,angular.copy(g),a),this.original=angular.copy(a),this.id=a.id,this.name=a.name,this.thumb_url=a.thumb_url,this.authentication.update(a)},f.prototype.refresh=function(a){var b=this;return e.all([a.call("account.get",[],{full:!0,id:b.id}).then(function(a){b.update(a)}),a.call("option.list",[],{account:b.id}).then(function(a){b.options=new c(a,b)})])},f.prototype["delete"]=function(a){var b=this;return a.call("account.delete",[],{id:b.id}).then(function(a){return a?void 0:e.reject()})},f.prototype.discard=function(){return this.update(this.original),this.options.discard()},f.prototype.save=function(a){var b=this;return this.authentication.clear(),e.all([this.current().then(function(c){return a.call("account.update",[],{id:b.id,data:c}).then(function(a){b.update(a)})}),this.options.save(a)])["catch"](function(a){return b.handleError(a),e.reject(a)})},f.prototype.handleError=function(a){d.isDefined(a)&&d.isDefined(a.code)&&d.isDefined(a.message)&&(0===a.code.indexOf("error.account.trakt.")?this.authentication.trakt.onSaveError(a):0===a.code.indexOf("error.account.plex.")?this.authentication.plex.onSaveError(a):this.authentication.onSaveError(a),this.authentication.check())},f}]),angular.module("configurationApp").factory("Options",["StringUtil","$q",function(a,b){function c(b,d,e){e="undefined"!=typeof e?e:0;for(var f=0;f<d.length;++f){var g=d[f],h=g.group[e],i=b[h];"undefined"==typeof i&&(i=b[h]={name:h,groups:{},enabled:null,options:[],order:null}),null===i.order?i.order=g.order:g.order<i.order&&(i.order=g.order),g.group.length-e===1?a.endsWith(g.key,".enabled")&&"boolean"===g.type?i.enabled=g:i.options.push(g):c(i.groups,[g],e+1)}}function d(a,b){this.current=a,this.account="undefined"!=typeof b?b:null,this.original=angular.copy(a),this.groups={},c(this.groups,a)}return d.prototype.discard=function(){for(var a=0;a<this.current.length;++a){var c=this.current[a],d=this.original[a];c.value=d.value}return b.resolve()},d.prototype.save=function(a){for(var c=this,d={},e=0;e<this.current.length;++e){var f=this.current[e],g=this.original[e];d[f.key]={from:g.value,to:f.value}}return a.call("option.update",[],{changes:d,account:null!==this.account?this.account.id:null}).then(function(a){var b=_.object(_.map(a.updated,function(a){return[a,!0]}));_.each(c.original,function(a,d){"undefined"!=typeof b[a.key]&&(a.value=c.current[d].value)})},function(a){return b.reject(a)})},d}]),angular.module("configurationApp").factory("RavenTags",function(){var a={};return{update:function(b){_.each(b,function(b,c){a[c]=b}),Raven.setTagsContext(a)}}}),angular.module("configurationApp").factory("Authentication",["RavenTags","Utils","$http","$q","$rootScope",function(a,b,c,d,e){function f(a,c){e.$a={authenticated:b.isDefined(a)?a:!1,user:b.isDefined(c)?c:null},e.$a.authenticated||(e.$s=null),b.isDefined(c)?plex.cloud.token=c._authenticationToken:plex.cloud.token=null}var g="MLawOtoMiFf5Ni9nbu0bTes2+UkrVLMZ8LSPwA+qTtA=",h=/^server\.\w+\.((token_channel)|(token_channel_expire)|(token_plex))$/,i=null;f();var j={authenticated:function(){return null!==i},user:function(b){return void 0!==b?(i=b,null!==b?a.update({user_identifier:"undefined"!=typeof i.username?md5(i.username+g):null}):a.update({user_identifier:null}),b):i},token:function(a){return void 0===a?localStorage["plex.token"]:(null===a?delete localStorage["plex.token"]:localStorage["plex.token"]=a,a)},login:function(a,c){return b.isDefined(a)&&b.isDefined(c)?(this.token(a),this.user(c),f(!0,c),!0):(f(),!1)},logout:function(){this.token(null),this.user(null);for(var a=[],b=0;b<localStorage.length;++b){var c=localStorage.key(b);null!==h.exec(c)&&a.push(c)}_.each(a,function(a){delete localStorage[a]}),f()},get:function(){var a=d.defer(),b=this,c=b.token(),e=b.user();return"undefined"==typeof c||null===c?(a.reject(),a.promise):null!==e?(a.resolve(e),a.promise):(plex.cloud["/users"].account(c).then(function(c){var d=c.data;b.user(d.user),f(!0,d.user),a.resolve(d.user)},function(){f(),a.reject()}),a.promise)}};return j}]),angular.module("configurationApp").factory("StringUtil",function(){return{endsWith:function(a,b){return-1!==a.indexOf(b,a.length-b.length)}}}),angular.module("configurationApp").factory("VersionUtil",function(){return{compare:function(a,b){if(typeof a+typeof b!="stringstring")return!1;for(var c=a.split("."),d=b.split("."),e=0,f=Math.max(c.length,d.length);f>e;e++){if(c[e]&&!d[e]&&parseInt(c[e])>0||parseInt(c[e])>parseInt(d[e]))return 1;if(d[e]&&!c[e]&&parseInt(d[e])>0||parseInt(c[e])<parseInt(d[e]))return-1}return 0}}}),angular.module("configurationApp").run(["$templateCache",function(a){a.put("directives/authentication/plex.html",'<div class="messages"> <small class="message {{ message.type }}" ng-repeat="message in plex.messages track by $index">{{ message.content }}</small> </div> <div ng-switch="state()"> <div class="account-edit" ng-switch-when="edit"> <co-plex-login co-authenticated="onAuthenticated" co-cancel-enabled="isAuthenticated()" co-cancelled="onCancelled" co-button-size="tiny" co-modes="{basic: true, home: true, pin: true}"> </co-plex-login> </div> <div class="account-view" ng-switch-default> <img class="avatar" ng-src="{{ plex.thumb_url }}"> <div class="details"> <h4>{{ plex.title }}</h4> <div class="actions"> <a class="button tiny secondary" ng-click="switch(\'edit\')" title="Edit"> <i class="fi-pencil"></i> </a> <co-button co-class="alert" co-tooltip="Disconnect" co-callback="disconnect"> <i class="fi-x"></i> </co-button> </div> </div> </div> </div>'),a.put("directives/authentication/tabs.html",'<div class="tabbable"> <dl class="tabs"> <dd data-state="{{ account.authentication.trakt.state }}" ng-class="{active: selected == \'trakt\'}"> <a ng-click="select(\'trakt\')">Trakt</a> </dd> <dd data-state="{{ account.authentication.plex.state }}" ng-class="{active: selected == \'plex\'}"> <a ng-click="select(\'plex\')">Plex</a> </dd> </dl> <div class="tabs-content" ng-switch="selected"> <div class="content active" ng-switch-when="trakt"> <co-authentication-trakt co-account="account" co-trakt="account.authentication.trakt"> </co-authentication-trakt> </div> <div class="content active" ng-switch-when="plex"> <co-authentication-plex co-account="account" co-plex="account.authentication.plex"> </co-authentication-plex> </div> </div> </div>'),a.put("directives/authentication/trakt.html",'<div class="messages"> <small class="message {{ message.type }}" ng-repeat="message in trakt.messages track by $index">{{ message.content }}</small> <small class="message {{ message.type }}" ng-repeat="message in trakt.basic.messages track by $index">{{ message.content }}</small> <small class="message {{ message.type }}" ng-repeat="message in trakt.pin.messages track by $index">{{ message.content }}</small> </div> <div ng-switch="state()"> <div class="account-edit" ng-switch-when="edit"> <co-trakt-login co-cancel-enabled="isAuthenticated()" co-cancelled="onCancelled" co-basic="trakt.basic" co-basic-authenticated="onBasicAuthenticated()" co-pin="trakt.pin" co-pin-authenticated="onPinAuthenticated(authorization, settings)" co-button-size="tiny"> </co-trakt-login> </div> <div class="account-view" ng-switch-default> <img class="avatar" ng-src="{{ trakt.thumb_url }}"> <div class="details"> <h4>{{ trakt.username }}</h4> <div class="actions"> <a class="button tiny secondary" ng-click="switch(\'edit\')" title="Edit"> <i class="fi-pencil"></i> </a> <co-button co-class="alert" co-tooltip="Disconnect" co-callback="disconnect"> <i class="fi-x"></i> </co-button> </div> </div> </div> </div>'),a.put("directives/button-input.html",'<div class="cobi" ng-class="{opened: opened}"> <div class="cobi-input"> <input type="text" placeholder="{{ placeholder }}" ng-model="value" ng-keyup="keyup($event)"> </div> <div class="cobi-button"> <button class="ladda-button tiny secondary" data-style="zoom-out" data-spinner-color="#333333" data-spinner-size="24" title="{{ title }}" ng-click="click()"> <span class="ladda-label" ng-transclude></span> </button> </div> </div> <small class="error" ng-show="error">{{ error }}</small>'),a.put("directives/button.html",'<button data-style="zoom-out" data-spinner-color="#FFFFFF" data-spinner-size="24" data-spinner-top="50%" data-spinner-left="50%" style="display: none" title="{{ tooltip }}" ng-click="click()"> <span class="ladda-label" ng-transclude></span> </button>'),a.put("directives/configuration/group.html",'<div class="group" ng-repeat="(key, group) in groups | orderObjectBy:\'order\'"> <div class="row header"> <div class="small-8 large-10 columns"> <h5>{{ group.name }}</h5> </div> <div class="switch small-4 large-2 columns" ng-show="group.enabled"> <input id="{{ group.enabled.key }}" type="checkbox" ng-model="group.enabled.value"> <label for="{{ group.enabled.key }}"></label> </div> </div> <div class="row group-options"> <co-configuration-option class="columns" ng-repeat="option in group.options | orderBy: \'order\'" option="option"></co-configuration-option> </div> <div class="sub-group row"> <div class="columns" ng-repeat="(key, group) in group.groups | orderObjectBy:\'order\'"> <div class="row header"> <div class="small-12 columns"> <h6>{{ group.name }}</h6> </div> </div> <div class="row group-options"> <co-configuration-option class="columns" ng-repeat="option in group.options | orderBy: \'order\'" option="option"></co-configuration-option> </div> </div> </div> </div>'),a.put("directives/configuration/header.html",'<div class="title small-5 large-7 columns"> <h5>{{ title }}</h5> </div> <div class="actions small-7 large-5 columns"> <co-button co-class="secondary" co-tooltip="Refresh options" co-self="self" co-callback="refresh"> <i class="fi-refresh"></i> </co-button> <co-button co-class="secondary" co-tooltip="Discard changes" co-self="self" co-callback="discard"> <i class="fi-trash"></i> </co-button> <co-button co-tooltip="Save changes" co-self="self" co-callback="save"> <i class="fi-save"></i> </co-button> <co-button co-class="alert" co-tooltip="Delete" co-self="self" co-callback="delete" ng-show="delete"> <i class="fi-x"></i> </co-button> </div>'),a.put("directives/configuration/option/boolean.html",'<div class="row" ng-class="{\'has-description\': option.description}"> <div class="large-6 columns controls controls-inline"> <input id="{{ option.key }}" type="checkbox" ng-model="option.value"> <div class="title"> <label for="{{ option.key }}">{{ option.label }}</label> <a ng-click="openDescription()"><i class="fi-info"></i></a> </div> </div> <div class="large-6 description" ng-class="{opened: descriptionOpened}"> <a class="close" aria-label="Close" ng-click="closeDescription()">&#215;</a> <div marked="option.description"></div> </div> <div class="description-overlay" ng-class="{opened: descriptionOpened}" ng-click="closeDescription()"></div> </div>'),a.put("directives/configuration/option/enum.html",'<div class="row" ng-class="{\'has-description\': option.description}"> <div class="large-6 columns controls"> <div class="title"> <label for="{{ option.key }}">{{ option.label }}</label> <a ng-click="openDescription()"><i class="fi-info"></i></a> </div> <select id="{{ option.key }}" ng-model="option.value" ng-options="parseKey(key) as label for (key, label) in option.choices"></select> </div> <div class="large-6 description" ng-class="{opened: descriptionOpened}"> <a class="close" aria-label="Close" ng-click="closeDescription()">&#215;</a> <div marked="option.description"></div> </div> <div class="description-overlay" ng-class="{opened: descriptionOpened}" ng-click="closeDescription()"></div> </div>'),a.put("directives/configuration/option/integer.html",'<div class="row" ng-class="{\'has-description\': option.description}"> <div class="large-6 columns controls"> <div class="title"> <label for="{{ option.key }}">{{ option.label }}</label> <a ng-click="openDescription()"><i class="fi-info"></i></a> </div> <input id="{{ option.key }}" type="text" ng-model="option.value"> </div> <div class="large-6 description" ng-class="{opened: descriptionOpened}"> <a class="close" aria-label="Close" ng-click="closeDescription()">&#215;</a> <div marked="option.description"></div> </div> <div class="description-overlay" ng-class="{opened: descriptionOpened}" ng-click="closeDescription()"></div> </div>'),a.put("directives/configuration/option/string.html",'<div class="row" ng-class="{\'has-description\': option.description}"> <div class="large-6 columns controls"> <div class="title"> <label for="{{ option.key }}">{{ option.label }}</label> <a ng-click="openDescription()"><i class="fi-info"></i></a> </div> <input id="{{ option.key }}" type="text" ng-model="option.value"> </div> <div class="large-6 description" ng-class="{opened: descriptionOpened}"> <a class="close" aria-label="Close" ng-click="closeDescription()">&#215;</a> <div marked="option.description"></div> </div> <div class="description-overlay" ng-class="{opened: descriptionOpened}" ng-click="closeDescription()"></div> </div>'),a.put("directives/plex/home.html",'<div ng-switch="state"> <div ng-switch-default> <div class="header"> <h5>Select User</h5> </div> <ul class="small-block-grid-3 large-block-grid-4"> <li ng-repeat="user in users"> <a class="user" ng-click="select(user)"> <div class="tile"> <img class="avatar" ng-src="{{ user._thumb }}"> <div class="tags"> <i class="protected fi-lock" ng-show="user._protected == \'1\'"></i> <i class="admin fi-crown" ng-show="user._admin == \'1\'"></i> </div> </div> <span class="title">{{ user._title }}</span> </a> </li> </ul> </div> <div class="pin-authentication row" ng-switch-when="pin"> <div class="header"> <a class="back" ng-click="switch(\'list\')"><i class="fa fa-chevron-left"></i></a> <h5>Enter PIN</h5> </div> <div class="user large-3 columns"> <div class="tile"> <img class="avatar" ng-src="{{ current._thumb }}"> <div class="tags"> <i class="protected fi-lock" ng-show="current._protected == \'1\'"></i> <i class="admin fi-crown" ng-show="current._admin == \'1\'"></i> </div> </div> <span class="title">{{ current._title }}</span> </div> <div class="fields large-9 columns"> <div class="large-12"> <span class="small-3 columns"> <input type="password" maxlength="1" pattern="\\d" ng-keydown="pinKeyDown($event)"> </span> <span class="small-3 columns"> <input type="password" maxlength="1" pattern="\\d" ng-keydown="pinKeyDown($event)"> </span> <span class="small-3 columns"> <input type="password" maxlength="1" pattern="\\d" ng-keydown="pinKeyDown($event)"> </span> <span class="small-3 columns"> <input type="password" maxlength="1" pattern="\\d" ng-keydown="pinKeyDown($event)"> </span> </div> </div> </div> </div>'),a.put("directives/plex/login.html",'<small class="message {{ message.type }}" ng-repeat="message in messages track by $index">{{ message.content }}</small> <div ng-switch="method"> <form class="basic-authentication" ng-switch-default> <div class="fields"> <label>Username <input type="text" ng-model="credentials.username"> </label> <label>Password <input type="password" ng-model="credentials.password"> </label> </div> <div class="buttons {{ buttonSize }}"> <div class="buttons-left"> <a class="button secondary {{ buttonSize }}" ng-click="onCancelled()" ng-show="onCancelled">Cancel</a> <a class="button secondary {{ buttonSize }}" dropdown-toggle="#plex-mode-dropdown">Mode</a> </div> <co-button co-size="{{ buttonSize }}" co-callback="basicLogin">Sign in</co-button> </div> </form> <div class="home-authentication" ng-switch-when="home"> <co-plex-home co-authenticated="onHomeAuthenticated"> </co-plex-home> <div class="buttons {{ buttonSize }}"> <div class="buttons-left"> <a class="button secondary {{ buttonSize }}" ng-class="{disabled: !isCancelEnabled}" ng-click="onCancelled()" ng-show="onCancelled"> Cancel </a> <a class="button secondary {{ buttonSize }}" dropdown-toggle="#plex-mode-dropdown">Mode</a> </div> </div> </div> <div class="pin-authentication" ng-switch-when="pin"> <div class="instructions"> Visit <a href="https://plex.tv/pin" target="_blank">https://plex.tv/pin</a> and enter this code: </div> <co-plex-pin co-authenticated="onPinAuthenticated" co-expired="onPinExpired"> </co-plex-pin> <div class="buttons {{ buttonSize }}"> <div class="buttons-left"> <a class="button secondary {{ buttonSize }}" ng-class="{disabled: !isCancelEnabled}" ng-click="onCancelled()" ng-show="onCancelled"> Cancel </a> <a class="button secondary {{ buttonSize }}" dropdown-toggle="#plex-mode-dropdown">Mode</a> </div> </div> </div> </div> <ul id="plex-mode-dropdown" class="{{ buttonSize }} f-dropdown"> <li ng-class="{active: method == \'manual\'}" ng-show="modes.basic"> <a ng-click="switch(\'manual\')">Basic</a> </li> <li ng-class="{active: method == \'home\'}" ng-show="modes.home"> <a ng-click="switch(\'home\')">Home</a> </li> <li ng-class="{active: method == \'pin\'}" ng-show="modes.pin"> <a ng-click="switch(\'pin\')">PIN</a> </li> </ul>'),a.put("directives/plex/pin.html",'<div class="code" ng-switch="state"> <div class="code-spinner" ng-switch-when="create"> <span us-spinner="{color: \'#FFF\', length: 0, lines: 7, radius: 15, width: 10}"></span> </div> <div class="code-value" ng-switch-when="check"> {{ current.code }} </div> <div class="code-error" ng-switch-when="error"> <b>Error</b><br> Unable to retrieve pin details from plex.tv </div> </div>'),a.put("directives/trakt/login.html",'<small class="message {{ message.type }}" ng-repeat="message in messages track by $index">{{ message.content }}</small> <div ng-switch="method"> <div class="basic-authentication" ng-switch-default> <div class="fields"> <label>Username <input type="text" ng-model="basic.username"> </label> <label>Password <input type="password" ng-model="basic.password"> </label> </div> <div class="buttons {{ buttonSize }}"> <div class="buttons-left"> <a class="button secondary {{ buttonSize }}" ng-class="{disabled: !isCancelEnabled}" ng-click="cancelled()" ng-show="cancelled"> Cancel </a> <a class="button secondary {{ buttonSize }}" dropdown-toggle="#trakt-mode-dropdown">Mode</a> </div> <co-button co-size="{{ buttonSize }}" co-callback="basicLogin">Sign in</co-button> </div> </div> <div class="pin-authentication" ng-switch-when="pin"> <div class="fields"> <label for="trakt.oauth.code">Authentication PIN <a href="https://trakt.tv/pin/478" target="_blank">Get PIN</a></label> <input id="trakt.oauth.code" type="password" ng-model="pin.code"> </div> <div class="buttons {{ buttonSize }}"> <div class="buttons-left"> <a class="button secondary {{ buttonSize }}" ng-class="{disabled: !isCancelEnabled}" ng-click="cancelled()" ng-show="cancelled"> Cancel </a> <a class="button secondary {{ buttonSize }}" dropdown-toggle="#trakt-mode-dropdown">Mode</a> </div> <co-button co-size="{{ buttonSize }}" co-callback="pinLogin">Sign in</co-button> </div> </div> </div> <ul id="trakt-mode-dropdown" class="{{ buttonSize }} f-dropdown"> <li ng-class="{active: method == \'manual\'}"> <a ng-click="switch(\'manual\')">Basic</a> </li> <li ng-class="{active: method == \'pin\'}"> <a ng-click="switch(\'pin\')">PIN</a> </li> </ul>'),a.put("modals/authenticationDetails.html",'<h4>Login to plex.tv</h4> This web-application requires access to your plex.tv account to: <ul> <li>Discover servers linked to your account</li> <li>Connect to your server</li> <li>Authenticate with the trakt plugin</li> </ul> <p> Your plex.tv credentials are sent directly to the official plex.tv API to exchange for an authentication token, this token is stored locally in your browser until you logout or clear your browser “Cookies and other site and plugin data”. </p> <p> Access to your plex.tv account can be revoked at any time at <a href="http://app.plex.tv/web/app#!/settings/devices">http://app.plex.tv/web/app#!/settings/devices</a>, look for a device named “trakt (for Plex) - Configuration”. </p> <a class="close-reveal-modal" aria-label="Close" ng-click="$close()">&#215;</a>'),a.put("modals/deleteAccount.html",'<div class="delete-account"> <h6>Are you sure you want to delete <b>{{ account.name }}</b>?</h6> <div class="controls pull-right"> <a class="button small secondary" ng-click="$dismiss()">Cancel</a> <a class="button small alert" ng-click="$close()">Delete</a> </div> </div>'),a.put("modals/disconnectAccount.html",'<div class="disconnect-account"> <h6>Are you sure you want to disconnect <b>{{ username }}</b> from <b>{{ account.name }}</b>?</h6> <div class="controls pull-right"> <a class="button small secondary" ng-click="$dismiss()">Cancel</a> <a class="button small alert" ng-click="$close()">Disconnect</a> </div> </div>'),a.put("views/configuration/accounts.html",'<div class="accounts small-12 large-9 large-centered columns"> <div class="list small-4 columns"> <ul class="panel side-nav"> <li ng-repeat="a in accounts" ng-class="{active: account.id == a.id}"> <a href="#/configuration/accounts?id={{ a.id }}"> <img class="avatar" ng-src="{{ a.thumb_url }}">{{ a.name }}<i class="state" data-state="{{ a.authentication.state }}"></i> </a> </li> </ul> <div class="actions"> <div class="actions-left"> <co-button co-class="secondary" co-tooltip="Refresh accounts" co-callback="refresh"> <i class="fi-refresh"></i> </co-button> </div> <div class="actions-right"> <co-button-input class="create" co-placeholder="Name" co-tooltip="Create account" co-callback="create"> <i class="fi-plus"></i> </co-button-input> </div> </div> </div> <div class="options small-8 columns"> <co-configuration-header class="row" co-title="account.name" co-refresh="accountRefresh" co-discard="accountDiscard" co-save="accountSave" co-delete="(account && account.id !== 1) ? accountDelete : null"> </co-configuration-header> <div class="authentication group" ng-show="account"> <div class="row header"> <div class="small-8 large-10 columns"> <h5>Authentication</h5> </div> </div> <div class="messages"> <small class="message {{ message.type }}" ng-repeat="message in account.authentication.messages track by $index">{{ message.content }}</small> </div> <co-authentication-tabs co-account="account"> </co-authentication-tabs> </div> <co-configuration-group co-groups="account.options.groups"> </co-configuration-group> </div> </div>'),
a.put("views/configuration/rules.html",'<div class="rules large-9 large-centered columns"> <div class="clients large-12"> <co-configuration-header class="row" co-title="\'Client Rules\'" co-self="client" co-refresh="client.refresh" co-discard="client.discard" co-save="client.save"> </co-configuration-header> <table cellspacing="0" data-collection="client"> <thead> <tr> <th class="actions"></th> <th class="account">Account</th> <th class="machine-identifier">Client</th> <th class="name">Name</th> <th class="address">Address</th> </tr> </thead> <tbody> <tr class="rule p-{{ rule.priority }}" ng-repeat="rule in client.rules track by $index" ng-class="{edit: rule.state == \'edit\'}"> <td class="actions" ng-switch on="rule.state"> <div ng-switch-when="edit"> <a title="Delete" ng-click="rule.delete()"><i class="fi-x"></i></a> <a title="Save" ng-click="rule.save()"><i class="fi-save"></i></a> </div> <div ng-switch-default> <a title="Move" class="move"><i class="fa fa-arrows-v"></i></a> <a title="Delete" ng-click="rule.delete()"><i class="fi-x"></i></a> <a title="Edit" ng-click="rule.edit()"><i class="fi-wrench"></i></a> </div> </td> <td class="account" ng-switch on="rule.state"> <div class="wrapper edit" ng-switch-when="edit"> <selectize config="{\r\n                  optgroupField: \'type\',\r\n                  optgroupValueField: \'type\',\r\n                  maxItems: 1,\r\n                  optgroups: [\r\n                    {type: \'name\', label: \'Accounts\'}\r\n                  ]\r\n                }" options="client.accounts" ng-model="rule.account.id"> </selectize> </div> <div class="wrapper plain" ng-switch-default> <span ng-if="!rule.account.deleted">{{ rule.account.name }}</span> <span class="deleted" ng-if="rule.account.deleted">deleted</span> </div> </td> <td class="machine-identifier" ng-switch on="rule.state"> <div class="wrapper edit" ng-switch-when="edit"> <selectize config="{\r\n                  create: true,\r\n                  optgroupField: \'type\',\r\n                  optgroupValueField: \'type\',\r\n                  maxItems: 1,\r\n                  optgroups: [\r\n                    {type: \'key\', label: \'Clients\'}\r\n                  ],\r\n                  render: {\r\n                    option: client.renderClient\r\n                  }\r\n                }" options="client.available.keys" ng-model="rule.key"> </selectize> </div> <div class="wrapper plain" ng-switch-default> {{ attributeLabel(rule.key) }} </div> </td> <td ng-switch on="rule.state"> <div class="wrapper edit" ng-switch-when="edit"> <selectize config="{\r\n                  create: true,\r\n                  optgroupField: \'type\',\r\n                  optgroupValueField: \'type\',\r\n                  maxItems: 1,\r\n                  optgroups: [\r\n                    {type: \'name\', label: \'Names\'}\r\n                  ]\r\n                }" options="client.available.names" ng-model="rule.name"> </selectize> </div> <div class="wrapper plain" ng-switch-default> {{ attributeLabel(rule.name) }} </div> </td> <td ng-switch on="rule.state"> <div class="wrapper edit" ng-switch-when="edit"> <selectize config="{\r\n                  create: true,\r\n                  optgroupField: \'type\',\r\n                  optgroupValueField: \'type\',\r\n                  maxItems: 1,\r\n                  optgroups: [\r\n                    {type: \'address\', label: \'IP Addresses\'}\r\n                  ]\r\n                }" options="client.available.addresses" ng-model="rule.address"> </selectize> </div> <div class="wrapper plain" ng-switch-default> {{ attributeLabel(rule.address) }} </div> </td> </tr> </tbody> <tfoot> <tr class="new"> <td class="actions"> <a title="New" ng-click="client.create()"><i class="fi-plus"></i></a> </td> </tr> </tfoot> </table> </div> <div class="users large-12"> <co-configuration-header class="row" co-title="\'User Rules\'" co-self="user" co-refresh="user.refresh" co-discard="user.discard" co-save="user.save"> </co-configuration-header> <table cellspacing="0" data-collection="user"> <thead> <tr> <th class="actions"></th> <th class="account">Account</th> <th style="width: 220px">Name</th> <th style="width: auto"></th> </tr> </thead> <tbody> <tr class="rule p-{{ rule.priority }}" ng-repeat="rule in user.rules track by $index" ng-class="{edit: rule.state == \'edit\'}"> <td class="actions" ng-switch on="rule.state"> <div ng-switch-when="edit"> <a title="Delete" ng-click="rule.delete()"><i class="fi-x"></i></a> <a title="Save" ng-click="rule.save()"><i class="fi-save"></i></a> </div> <div ng-switch-default> <a title="Move" class="move"><i class="fa fa-arrows-v"></i></a> <a title="Delete" ng-click="rule.delete()"><i class="fi-x"></i></a> <a title="Edit" ng-click="rule.edit()"><i class="fi-wrench"></i></a> </div> </td> <td class="account" ng-switch on="rule.state"> <div class="wrapper edit" ng-switch-when="edit"> <selectize config="{\r\n                  optgroupField: \'type\',\r\n                  optgroupValueField: \'type\',\r\n                  maxItems: 1,\r\n                  optgroups: [\r\n                    {type: \'name\', label: \'Accounts\'}\r\n                  ]\r\n                }" options="user.accounts" ng-model="rule.account.id"> </selectize> </div> <div class="wrapper plain" ng-switch-default> <span ng-if="!rule.account.deleted">{{ rule.account.name }}</span> <span class="deleted" ng-if="rule.account.deleted">deleted</span> </div> </td> <td ng-switch on="rule.state"> <div class="wrapper edit" ng-switch-when="edit"> <selectize config="{\r\n                  create: true,\r\n                  optgroupField: \'type\',\r\n                  optgroupValueField: \'type\',\r\n                  maxItems: 1,\r\n                  optgroups: [\r\n                    {type: \'name\', label: \'Names\'}\r\n                  ]\r\n                }" options="user.available.names" ng-model="rule.name"> </selectize> </div> <div class="wrapper plain" ng-switch-default> {{ attributeLabel(rule.name) }} </div> </td> <td style="width: auto"></td> </tr> </tbody> <tfoot> <tr class="new"> <td class="actions"> <a title="New" ng-click="user.create()"><i class="fi-plus"></i></a> </td> </tr> </tfoot> </table> </div> </div>'),a.put("views/configuration/server.html",'<div class="options small-12 small-centered large-6 large-centered columns"> <co-configuration-header class="row" co-title="$s.name" co-refresh="refresh" co-discard="discard" co-save="save"> </co-configuration-header> <co-configuration-group co-groups="options.groups"></co-configuration-group> </div>'),a.put("views/connect.html",'<div class="connect panel small-10 small-centered large-4 large-centered columns" ng-switch="state"> <div class="header"> <h5>Connect</h5> </div> <div class="servers" ng-switch-default> <div class="row server" ng-repeat="server in servers" ng-click="select(server)"> <div class="name small-12">{{ server.name }}</div> <div class="error small-12" ng-show="server.status">{{ server.status }}</div> </div> </div> <div class="status" ng-switch-when="connecting"> <span us-spinner="{color: \'#333\', length: 0, lines: 7, radius: 15, width: 10}"></span> </div> </div>'),a.put("views/home.html",""),a.put("views/login.html",'<div class="login panel"> <div class="header"> <h5>Login to plex.tv</h5> <div class="help"> <a class="details" ng-click="showAuthenticationDetails()" title="Authentication details"> <i class="fa fa-question-circle"></i> </a> </div> </div> <co-plex-login co-authenticated="onAuthenticated" co-modes="{basic: true, pin: true}"> </co-plex-login> </div>'),a.put("views/logout.html","")}]);